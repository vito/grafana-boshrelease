---
name: grafana

templates:
  grafana_ctl: bin/grafana_ctl
  post-start: bin/post-start
  create-update-datasources.erb: bin/create-update-datasources
  create-update-dashboards.erb: bin/create-update-dashboards
  config.ini.erb: config/config.ini
  ssl.key.erb: config/ssl.key
  ssl.crt.erb: config/ssl.crt
  credentials: home/.aws/credentials
  client.key.erb: config/client.key
  client.crt.erb: config/client.crt
  cacert.pem.erb: config/cacert.pem

packages:
- grafana

properties:
  grafana.listen_port:
    description: "TCP port on which the Grafana server should listen."
    default: 3000

  grafana.root_url:
    description: "The full root URL for the instance. Used for OAuth callbacks."

  grafana.ssl.cert:
    description: "SSL cert to use for HTTPS. If not specified, the server will listen in plaintext."

  grafana.ssl.key:
    description: "SSL private key to use for HTTPS. If not specified, the server will listen in plaintext."

  grafana.admin_username:
    description: "Username for the initial admin user."

  grafana.admin_password:
    description: "Password for the initial admin user."

  grafana.session.cookie_name:
    description: "Session cookie name"

  grafana.session.cookie_secure:
    description: "Use session in https only"

  grafana.session.session_life_time:
    description: "Session lifetime in seconds"

  grafana.users.allow_sign_up:
    description: "If enabled, users can create their own accounts."
    default: false

  grafana.users.allow_organization_creation:
    description: "If enabled, non-admin users can create organizations."
    default: false

  grafana.users.auto_assign_organization:
    description: "If enabled, new users will be automatically added to the default organization (id 1)."
    default: true

  grafana.users.auto_assign_organization_role:
    description: "The role for new users when automatically added to the default organization."
    default: Viewer

  grafana.auth.anonymous.enabled:
    description: "If enabled, users do not have to log in."
    default: false

  grafana.auth.anonymous.organization:
    description: "The organization that should be used for unauthenticated users."
    default: Main Org.

  grafana.auth.anonymous.organization_role:
    description: "The role to assume for anonymous users."
    default: Viewer

  grafana.auth.ldap.enabled:
    description: "Auth LDAP enable"

  grafana.auth.ldap.config:
    description: "LDAP configuration (toml)"
    
  grafana.auth.ldap.allow_sign_up:
    description: "Auth LDAP allow sign up"

  grafana.auth.github.enabled:
    description: "Permit users to authenticate via GitHub OAuth."
    default: false

  grafana.auth.github.allow_sign_up:
    description: "Permit users to register via GitHub OAuth."
    default: true

  grafana.auth.github.client_id:
    description: "GitHub OAuth client ID."

  grafana.auth.github.client_secret:
    description: "GitHub OAuth client secret."

  grafana.auth.github.auth_url:
    description: "GitHub OAuth authorization endpoint."
    default: https://github.com/login/oauth/authorize

  grafana.auth.github.token_url:
    description: "GitHub OAuth access token endpoint."
    default: https://github.com/login/oauth/access_token

  grafana.auth.github.api_url:
    description: "GitHub users API endpoint."
    default: https://api.github.com/user

  grafana.auth.github.allowed_email_domains:
    description: "E-mail address domains to allow. If empty, all are allowed."
    default: []

  grafana.auth.github.allowed_organizations:
    description: "GitHub organizations to allow. If empty, all are allowed."
    default: []

  grafana.auth.github.team_ids:
    description: "GitHub team IDs to allow. If empty, all are allowed."
    default: []

  grafana.auth.google.enabled:
    description: "Permit users to authenticate via Google OAuth."
    default: false

  grafana.auth.google.allow_sign_up:
    description: "Permit users to register via Google OAuth."
    default: true

  grafana.auth.google.client_id:
    description: "Google OAuth client ID."

  grafana.auth.google.client_secret:
    description: "Google OAuth client secret."

  grafana.auth.google.auth_url:
    description: "Google OAuth authorization endpoint."
    default: https://accounts.google.com/o/oauth2/auth

  grafana.auth.google.token_url:
    description: "Google OAuth access token endpoint."
    default: https://accounts.google.com/o/oauth2/token

  grafana.auth.google.api_url:
    description: "Google users API endpoint."
    default: https://www.googleapis.com/oauth2/v1/userinfo

  grafana.auth.google.allowed_email_domains:
    description: "E-mail address domains to allow. If empty, all are allowed."
    default: []

  grafana.auth.generic_oauth.enabled:
    description: "Permit users to authenticate via Generic OAuth."
    default: false

  grafana.auth.generic_oauth.name:
    description: "Generic OAuth login link display name."
    default: "OAuth"

  grafana.auth.generic_oauth.client_id:
    description: "Generic OAuth client ID."

  grafana.auth.generic_oauth.client_secret:
    description: "Generic OAuth client secret."

  grafana.auth.generic_oauth.scopes:
    description: "Generic OAuth scopes."

  grafana.auth.generic_oauth.auth_url:
    description: "Generic OAuth authorization endpoint."

  grafana.auth.generic_oauth.token_url:
    description: "Generic OAuth access token endpoint."

  grafana.auth.generic_oauth.api_url:
    description: "Generic OAuth OpenID UserInfo API endpoint."

  grafana.auth.generic_oauth.allowed_domains:
    description: "E-mail address domains to allow. If empty, all are allowed."
    default: []

  grafana.auth.generic_oauth.allow_sign_up:
    description: "Permit users to register via Generic OAuth."
    default: true

  grafana.auth.generic_oauth.tls_client_cert:
    description: "PEM encoded certificate for TLS client authentication via Generic OAuth."

  grafana.auth.generic_oauth.tls_client_key:
    description: "PEM encoded private key for TLS client authentication via Generic OAuth."

  grafana.auth.generic_oauth.tls_client_ca:
    description: "PEM encoded CA certificate for TLS client authentication via Generic OAuth."

  grafana.datasource:
    description: "Grafana datasource; see http://docs.grafana.org/http_api/data_source/ for details"

  grafana.datasources:
    description: |
      * If you want to configure multiple datasources, you can define an array of hashes here. Each hash must have 'name', 'url', 'type', 'user', 'password' and 'database' defined.
      * These datasources will be created in addition to the datasource defined in 'grafana.datasource'. The latter property is for backwards compatibility.
      * See http://docs.grafana.org/http_api/data_source/ for details
    example: |
      - name: influxdb
        url: http://1.2.3.4:8086
        type: influxdb
        user: admin
        password: admin123
        database: metrics
    default: []

  grafana.dashboards:
    description: |
      List of grafana dasboards, converted to YAML
    example: |
      - name: frontend (without extension)
        content: <minified JSON content>
    default: []

  grafana.auth.proxy.enabled:
    description: "Handle authentication in a http reverse proxy"

  grafana.auth.proxy.header_name:
    description: "The name of the http header used to forward authenticated user"

  grafana.auth.proxy.header_property:
    description: "Whether the header contains a user name or an email address (allowed values are 'username' or 'email')."

  grafana.auth.proxy.auto_sign_up:
    description: "Enable sign up of users who do not exist in Grafana DB"

  grafana.aws.aws_access_key_id:
    description: "access key for AWS cloudwatch data source"
    default: ""

  grafana.aws.aws_secret_access_key:
    description: "secret access key for AWS cloudwatch data source"
    default: ""

  grafana.aws.region:
    description: "region for AWS cloudwatch data source"
    default: ""

  grafana.snapshots.external_enabled:
    description: "Enable external snapshots sharing (to snapshot.raintank.io)"
    default: true

  grafana.external_image_storage.s3.bucket:
    description: "S3 Bucket to which images can be uploaded for public visibility (i.e. alerting)."

  grafana.external_image_storage.s3.region:
    description: "S3 Bucket region."

  grafana.external_image_storage.s3.path:
    description: "S3 Bucket path."

  grafana.external_image_storage.s3.access_key:
    description: "Access key to use when uploading to the bucket."

  grafana.external_image_storage.s3.secret_key:
    description: "Secret key to use when uploading to the bucket."

  grafana.external_image_storage.webdav.url:
    description: "WebDAV URL to which images can be uploaded for public visibility (i.e. alerting)."

  grafana.external_image_storage.webdav.username:
    description: "WebDAV user name."

  grafana.external_image_storage.webdav.password:
    description: "WebDAV password."
